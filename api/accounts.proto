syntax = "proto3";

package accounts;

import "google/api/annotations.proto";
import "google/protobuf/wrappers.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

enum currencyType {
    USD = 0;
    EUR = 1;
    RU = 2;
}

message Account {
    int64 ID = 1;
    string name = 2;
    double balance = 3;
    currencyType currency = 4;
    bool isAvailable = 5;
}

// list
message ListRequest{
    google.protobuf.BoolValue isAvailable = 1;
}
message ListResponse{
    repeated Account accounts = 1;
}
// end of list

// get
message GetRequest{
    int64 ID = 1 [(validate.rules).int64.gt = 0];
}
message GetResponse{
    Account account = 1;
}
// end of get

// create
message CreateRequest{
    string name = 1 [(validate.rules).string.min_len = 1];
    double balance = 2 [(validate.rules).double.gte = 0];
    currencyType currency = 3 [(validate.rules).enum.defined_only = true];
}
message CreateResponse{
    int64 ID = 1;
}
// end of create

// update
message UpdateRequest{
    int64 ID = 1 [(validate.rules).int64.gt = 0];
    string name = 2 [(validate.rules).string.min_len = 1];
    double balance = 3 [(validate.rules).double.gte = 0];
    currencyType currency = 4 [(validate.rules).enum.defined_only = true];
    bool isAvailable = 5;
}
message UpdateResponse{}
// end of update

// delete
message DeleteRequest{
    int64 ID = 1 [(validate.rules).int64.gt = 0];
}
message DeleteResponse{}
// end of delete


service Accounts {
    rpc List(ListRequest) returns (ListResponse) {
        option (google.api.http) = {
            get: "/v1/accounts"
        };
    }

    rpc Get(GetRequest) returns (GetResponse) {
        option (google.api.http) = {
            get: "/v1/accounts/{ID}"
        };
    }

    rpc Create(CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/v1/accounts"
            body: "*"
        };
    }

    rpc Update(UpdateRequest) returns (UpdateResponse) {
        option (google.api.http) = {
            put: "/v1/accounts/{ID}"
            body: "*"
        };
    }

    rpc Delete(DeleteRequest) returns (DeleteResponse) {
        option (google.api.http) = {
            delete: "/v1/accounts/{ID}"
        };
    }
}
